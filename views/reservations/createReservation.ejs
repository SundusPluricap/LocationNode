<%- include('../partials/header') -%>
<link rel="stylesheet" href="/css/timePicker.css">

</head>
<body>
  <% let capacity %>
<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-md-6">
      <div class="card">
        <div class="card-header bg-primary text-white">
          <h1 class="mb-2">Créer une nouvelle Reservation</h1>
        </div>
        <div class="card-body">
          <p>
            Ce formulaire génère un devis en pdf, assurez-vous de le sauvegarder, puis revenez plus tard pour changer le statut lorsque le devis est validé par le client
          </p>
          <br/>
          <form action="/reservations/create" method="POST">
            
            <div class="mb-3">
                <label for="clientId" class="form-label">Select Client</label>
                <select class="form-control" id="clientId" name="clientId" required>
                  <% clients.forEach((client) => { %>
                  <option value="<%= client.id %>"><%= client.firstName %> <%= client.lastName %></option>
                  <% }); %>
                </select>
            </div>

            <div class="mb-3">
              <label for="salleId" class="form-label">Sélectionner la salle</label>
              <select class="form-control" id="salleId" name="salleId" required>
                <option value="" disabled selected>Select a room</option>
                <% rooms.forEach((room) => { %>
                  <option value="<%= room.id %>" data-capacity="<%= room.capacity %>"><%= room.name %> <%= room.capacity %></option>
                <% }); %>
              </select>
              
              
              


          </div>

            <div class="mb-3">
              <label for="startDate" class="form-label">Date</label>
              <input type="date" class="form-control" id="startDate" name="startDate" required>
            </div>

            <div class="mb-3 time-picker">
              <label for="time" class="form-label">Heure</label>
              <input type="time" class="form-control" id="startTime" name="startTime" required>
              <div class="time-options" id="time-options1">
                <!-- Options will be automatically generated by JavaScript -->
              </div>
            </div>


            <div class="mb-3 time-picker">
              à <input type="time" class="form-control" id="endTime" name="endTime" required>
              <div class="time-options" id="time-options2">
                <!-- Options will be automatically generated by JavaScript -->
              </div>
            </div>

            <div class="mb-3">
              <label for="objet" class="form-label">Objet</label>
              <input type="text" class="form-control" id="objet" name="objet" placeholder="Optional Reason">
            </div>

            <div class="mb-3">
              <label id="capacityDisplay"></label>
              <br/>
              <label for="nbrPeople" class="form-label">Nombre de personnes <span style="color:rgba(26, 2, 2, 0.381)">  nomber of people must be less than the capacity </span></label>
              <input type="number" class="form-control" id="nbrPeople" name="nbrPeople" required>
            </div>

            
            
          


            <div align="center">
              <button type="submit" class="btn btn-primary">Créer la reservation et Télécharger le devis</button>
              <a href="/reservations" class="btn btn-primary">go back</a>
            </div>



          </form>

          

          <% if (typeof errorMessage !== 'undefined') { %>
          <div class="alert alert-danger mt-3">
            <%= errorMessage %>
          </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>


/****
 * Time picker
 * 
 * 
*/
  function createTimePicker(inputId, optionsId) {
    const timeInput = document.getElementById(inputId);
    const timeOptions = document.getElementById(optionsId);

    timeInput.addEventListener('click', generateOptions);
    timeOptions.addEventListener('click', selectTime);

    document.addEventListener('click', closeDropdown);

    function generateOptions() {
      timeOptions.innerHTML = ''; // Clear existing options
      
      const currentTime = new Date();
      currentTime.setMinutes(Math.ceil(currentTime.getMinutes() / 30) * 30); // Round to nearest 30 minutes
      
      for (let i = 0; i < 24 * 2; i++) { // 24 hours * 2 (30-minute intervals)
        const optionTime = new Date(currentTime.getTime() + i * 30 * 60 * 1000);
        const optionText = optionTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        
        const optionElement = document.createElement('div');
        optionElement.classList.add('time-option');
        optionElement.textContent = optionText;
        optionElement.dataset.value = optionText;
        
        timeOptions.appendChild(optionElement);
      }
      
      timeOptions.style.display = 'block';
    }

    function selectTime(event) {
      if (event.target.classList.contains('time-option')) {
        const selectedTime = event.target.getAttribute('data-value');
        const selectedTimeDate = new Date();
        const [hours, minutes] = selectedTime.split(':');
        selectedTimeDate.setHours(parseInt(hours), parseInt(minutes));
        timeInput.value = selectedTimeDate.toTimeString().slice(0, 5);
        timeOptions.style.display = 'none';
        console.log(`Selected time: ${selectedTime}`);
      }
    }

    function closeDropdown(event) {
      if (!event.target.closest('.time-picker')) {
        timeOptions.style.display = 'none';
      }
    }
  }

  createTimePicker('startTime', 'time-options1');
  createTimePicker('endTime', 'time-options2');



/****
 * Display capacity
 * 
 * 
*/

  const salleIdSelect = document.getElementById("salleId");
  // salleIdSelect.selectedIndex = 0;
  const capacityDisplay = document.getElementById("capacityDisplay");
  
  salleIdSelect.addEventListener("change", () => {
    const selectedOption = salleIdSelect.options[salleIdSelect.selectedIndex];
    const selectedCapacity = selectedOption.getAttribute("data-capacity");
    capacityDisplay.textContent = `Capacity: ${selectedCapacity}`;
  });
              
</script>
</body>

<!-- <%- include('../partials/footer') -%> -->
